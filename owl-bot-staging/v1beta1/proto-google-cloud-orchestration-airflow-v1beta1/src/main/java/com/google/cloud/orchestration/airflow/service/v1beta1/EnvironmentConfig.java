// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/orchestration/airflow/service/v1beta1/environments.proto

package com.google.cloud.orchestration.airflow.service.v1beta1;

/**
 * <pre>
 * Configuration information for an environment.
 * </pre>
 *
 * Protobuf type {@code google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig}
 */
public final class EnvironmentConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig)
    EnvironmentConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EnvironmentConfig.newBuilder() to construct.
  private EnvironmentConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EnvironmentConfig() {
    gkeCluster_ = "";
    dagGcsPrefix_ = "";
    airflowUri_ = "";
    environmentSize_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EnvironmentConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EnvironmentConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            gkeCluster_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            dagGcsPrefix_ = s;
            break;
          }
          case 24: {

            nodeCount_ = input.readInt32();
            break;
          }
          case 34: {
            com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.Builder subBuilder = null;
            if (softwareConfig_ != null) {
              subBuilder = softwareConfig_.toBuilder();
            }
            softwareConfig_ = input.readMessage(com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(softwareConfig_);
              softwareConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.Builder subBuilder = null;
            if (nodeConfig_ != null) {
              subBuilder = nodeConfig_.toBuilder();
            }
            nodeConfig_ = input.readMessage(com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(nodeConfig_);
              nodeConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            airflowUri_ = s;
            break;
          }
          case 58: {
            com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.Builder subBuilder = null;
            if (privateEnvironmentConfig_ != null) {
              subBuilder = privateEnvironmentConfig_.toBuilder();
            }
            privateEnvironmentConfig_ = input.readMessage(com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(privateEnvironmentConfig_);
              privateEnvironmentConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 74: {
            com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.Builder subBuilder = null;
            if (webServerNetworkAccessControl_ != null) {
              subBuilder = webServerNetworkAccessControl_.toBuilder();
            }
            webServerNetworkAccessControl_ = input.readMessage(com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(webServerNetworkAccessControl_);
              webServerNetworkAccessControl_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.Builder subBuilder = null;
            if (databaseConfig_ != null) {
              subBuilder = databaseConfig_.toBuilder();
            }
            databaseConfig_ = input.readMessage(com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(databaseConfig_);
              databaseConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.Builder subBuilder = null;
            if (webServerConfig_ != null) {
              subBuilder = webServerConfig_.toBuilder();
            }
            webServerConfig_ = input.readMessage(com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(webServerConfig_);
              webServerConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 98: {
            com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.Builder subBuilder = null;
            if (encryptionConfig_ != null) {
              subBuilder = encryptionConfig_.toBuilder();
            }
            encryptionConfig_ = input.readMessage(com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(encryptionConfig_);
              encryptionConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 106: {
            com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.Builder subBuilder = null;
            if (maintenanceWindow_ != null) {
              subBuilder = maintenanceWindow_.toBuilder();
            }
            maintenanceWindow_ = input.readMessage(com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maintenanceWindow_);
              maintenanceWindow_ = subBuilder.buildPartial();
            }

            break;
          }
          case 122: {
            com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.Builder subBuilder = null;
            if (workloadsConfig_ != null) {
              subBuilder = workloadsConfig_.toBuilder();
            }
            workloadsConfig_ = input.readMessage(com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(workloadsConfig_);
              workloadsConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 128: {
            int rawValue = input.readEnum();

            environmentSize_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentsOuterClass.internal_static_google_cloud_orchestration_airflow_service_v1beta1_EnvironmentConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentsOuterClass.internal_static_google_cloud_orchestration_airflow_service_v1beta1_EnvironmentConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.class, com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.Builder.class);
  }

  /**
   * <pre>
   * The size of the Cloud Composer environment.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize}
   */
  public enum EnvironmentSize
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The size of the environment is unspecified.
     * </pre>
     *
     * <code>ENVIRONMENT_SIZE_UNSPECIFIED = 0;</code>
     */
    ENVIRONMENT_SIZE_UNSPECIFIED(0),
    /**
     * <pre>
     * The environment size is small.
     * </pre>
     *
     * <code>ENVIRONMENT_SIZE_SMALL = 1;</code>
     */
    ENVIRONMENT_SIZE_SMALL(1),
    /**
     * <pre>
     * The environment size is medium.
     * </pre>
     *
     * <code>ENVIRONMENT_SIZE_MEDIUM = 2;</code>
     */
    ENVIRONMENT_SIZE_MEDIUM(2),
    /**
     * <pre>
     * The environment size is large.
     * </pre>
     *
     * <code>ENVIRONMENT_SIZE_LARGE = 3;</code>
     */
    ENVIRONMENT_SIZE_LARGE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The size of the environment is unspecified.
     * </pre>
     *
     * <code>ENVIRONMENT_SIZE_UNSPECIFIED = 0;</code>
     */
    public static final int ENVIRONMENT_SIZE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The environment size is small.
     * </pre>
     *
     * <code>ENVIRONMENT_SIZE_SMALL = 1;</code>
     */
    public static final int ENVIRONMENT_SIZE_SMALL_VALUE = 1;
    /**
     * <pre>
     * The environment size is medium.
     * </pre>
     *
     * <code>ENVIRONMENT_SIZE_MEDIUM = 2;</code>
     */
    public static final int ENVIRONMENT_SIZE_MEDIUM_VALUE = 2;
    /**
     * <pre>
     * The environment size is large.
     * </pre>
     *
     * <code>ENVIRONMENT_SIZE_LARGE = 3;</code>
     */
    public static final int ENVIRONMENT_SIZE_LARGE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EnvironmentSize valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EnvironmentSize forNumber(int value) {
      switch (value) {
        case 0: return ENVIRONMENT_SIZE_UNSPECIFIED;
        case 1: return ENVIRONMENT_SIZE_SMALL;
        case 2: return ENVIRONMENT_SIZE_MEDIUM;
        case 3: return ENVIRONMENT_SIZE_LARGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EnvironmentSize>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EnvironmentSize> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EnvironmentSize>() {
            public EnvironmentSize findValueByNumber(int number) {
              return EnvironmentSize.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.getDescriptor().getEnumTypes().get(0);
    }

    private static final EnvironmentSize[] VALUES = values();

    public static EnvironmentSize valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EnvironmentSize(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize)
  }

  public static final int GKE_CLUSTER_FIELD_NUMBER = 1;
  private volatile java.lang.Object gkeCluster_;
  /**
   * <pre>
   * Output only. The Kubernetes Engine cluster used to run this environment.
   * </pre>
   *
   * <code>string gke_cluster = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The gkeCluster.
   */
  @java.lang.Override
  public java.lang.String getGkeCluster() {
    java.lang.Object ref = gkeCluster_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      gkeCluster_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Output only. The Kubernetes Engine cluster used to run this environment.
   * </pre>
   *
   * <code>string gke_cluster = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for gkeCluster.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGkeClusterBytes() {
    java.lang.Object ref = gkeCluster_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      gkeCluster_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DAG_GCS_PREFIX_FIELD_NUMBER = 2;
  private volatile java.lang.Object dagGcsPrefix_;
  /**
   * <pre>
   * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud
   * Storage objects reside in a flat namespace, a hierarchical file tree
   * can be simulated using "/"-delimited object name prefixes. DAG objects for
   * this environment reside in a simulated directory with the given prefix.
   * </pre>
   *
   * <code>string dag_gcs_prefix = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The dagGcsPrefix.
   */
  @java.lang.Override
  public java.lang.String getDagGcsPrefix() {
    java.lang.Object ref = dagGcsPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dagGcsPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud
   * Storage objects reside in a flat namespace, a hierarchical file tree
   * can be simulated using "/"-delimited object name prefixes. DAG objects for
   * this environment reside in a simulated directory with the given prefix.
   * </pre>
   *
   * <code>string dag_gcs_prefix = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for dagGcsPrefix.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDagGcsPrefixBytes() {
    java.lang.Object ref = dagGcsPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      dagGcsPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NODE_COUNT_FIELD_NUMBER = 3;
  private int nodeCount_;
  /**
   * <pre>
   * The number of nodes in the Kubernetes Engine cluster that will be
   * used to run this environment.
   * </pre>
   *
   * <code>int32 node_count = 3;</code>
   * @return The nodeCount.
   */
  @java.lang.Override
  public int getNodeCount() {
    return nodeCount_;
  }

  public static final int SOFTWARE_CONFIG_FIELD_NUMBER = 4;
  private com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig softwareConfig_;
  /**
   * <pre>
   * The configuration settings for software inside the environment.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
   * @return Whether the softwareConfig field is set.
   */
  @java.lang.Override
  public boolean hasSoftwareConfig() {
    return softwareConfig_ != null;
  }
  /**
   * <pre>
   * The configuration settings for software inside the environment.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
   * @return The softwareConfig.
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig getSoftwareConfig() {
    return softwareConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.getDefaultInstance() : softwareConfig_;
  }
  /**
   * <pre>
   * The configuration settings for software inside the environment.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfigOrBuilder getSoftwareConfigOrBuilder() {
    return getSoftwareConfig();
  }

  public static final int NODE_CONFIG_FIELD_NUMBER = 5;
  private com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig nodeConfig_;
  /**
   * <pre>
   * The configuration used for the Kubernetes Engine cluster.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
   * @return Whether the nodeConfig field is set.
   */
  @java.lang.Override
  public boolean hasNodeConfig() {
    return nodeConfig_ != null;
  }
  /**
   * <pre>
   * The configuration used for the Kubernetes Engine cluster.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
   * @return The nodeConfig.
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig getNodeConfig() {
    return nodeConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.getDefaultInstance() : nodeConfig_;
  }
  /**
   * <pre>
   * The configuration used for the Kubernetes Engine cluster.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfigOrBuilder getNodeConfigOrBuilder() {
    return getNodeConfig();
  }

  public static final int PRIVATE_ENVIRONMENT_CONFIG_FIELD_NUMBER = 7;
  private com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig privateEnvironmentConfig_;
  /**
   * <pre>
   * The configuration used for the Private IP Cloud Composer environment.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
   * @return Whether the privateEnvironmentConfig field is set.
   */
  @java.lang.Override
  public boolean hasPrivateEnvironmentConfig() {
    return privateEnvironmentConfig_ != null;
  }
  /**
   * <pre>
   * The configuration used for the Private IP Cloud Composer environment.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
   * @return The privateEnvironmentConfig.
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig getPrivateEnvironmentConfig() {
    return privateEnvironmentConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.getDefaultInstance() : privateEnvironmentConfig_;
  }
  /**
   * <pre>
   * The configuration used for the Private IP Cloud Composer environment.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfigOrBuilder getPrivateEnvironmentConfigOrBuilder() {
    return getPrivateEnvironmentConfig();
  }

  public static final int WEB_SERVER_NETWORK_ACCESS_CONTROL_FIELD_NUMBER = 9;
  private com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl webServerNetworkAccessControl_;
  /**
   * <pre>
   * Optional. The network-level access control policy for the Airflow web server. If
   * unspecified, no network-level access restrictions will be applied.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the webServerNetworkAccessControl field is set.
   */
  @java.lang.Override
  public boolean hasWebServerNetworkAccessControl() {
    return webServerNetworkAccessControl_ != null;
  }
  /**
   * <pre>
   * Optional. The network-level access control policy for the Airflow web server. If
   * unspecified, no network-level access restrictions will be applied.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The webServerNetworkAccessControl.
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl getWebServerNetworkAccessControl() {
    return webServerNetworkAccessControl_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.getDefaultInstance() : webServerNetworkAccessControl_;
  }
  /**
   * <pre>
   * Optional. The network-level access control policy for the Airflow web server. If
   * unspecified, no network-level access restrictions will be applied.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControlOrBuilder getWebServerNetworkAccessControlOrBuilder() {
    return getWebServerNetworkAccessControl();
  }

  public static final int DATABASE_CONFIG_FIELD_NUMBER = 10;
  private com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig databaseConfig_;
  /**
   * <pre>
   * Optional. The configuration settings for Cloud SQL instance used internally by Apache
   * Airflow software.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the databaseConfig field is set.
   */
  @java.lang.Override
  public boolean hasDatabaseConfig() {
    return databaseConfig_ != null;
  }
  /**
   * <pre>
   * Optional. The configuration settings for Cloud SQL instance used internally by Apache
   * Airflow software.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The databaseConfig.
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig getDatabaseConfig() {
    return databaseConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.getDefaultInstance() : databaseConfig_;
  }
  /**
   * <pre>
   * Optional. The configuration settings for Cloud SQL instance used internally by Apache
   * Airflow software.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfigOrBuilder getDatabaseConfigOrBuilder() {
    return getDatabaseConfig();
  }

  public static final int WEB_SERVER_CONFIG_FIELD_NUMBER = 11;
  private com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig webServerConfig_;
  /**
   * <pre>
   * Optional. The configuration settings for the Airflow web server App Engine instance.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the webServerConfig field is set.
   */
  @java.lang.Override
  public boolean hasWebServerConfig() {
    return webServerConfig_ != null;
  }
  /**
   * <pre>
   * Optional. The configuration settings for the Airflow web server App Engine instance.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The webServerConfig.
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig getWebServerConfig() {
    return webServerConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.getDefaultInstance() : webServerConfig_;
  }
  /**
   * <pre>
   * Optional. The configuration settings for the Airflow web server App Engine instance.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfigOrBuilder getWebServerConfigOrBuilder() {
    return getWebServerConfig();
  }

  public static final int AIRFLOW_URI_FIELD_NUMBER = 6;
  private volatile java.lang.Object airflowUri_;
  /**
   * <pre>
   * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see
   * [Airflow web
   * interface](/composer/docs/how-to/accessing/airflow-web-interface)).
   * </pre>
   *
   * <code>string airflow_uri = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The airflowUri.
   */
  @java.lang.Override
  public java.lang.String getAirflowUri() {
    java.lang.Object ref = airflowUri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      airflowUri_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see
   * [Airflow web
   * interface](/composer/docs/how-to/accessing/airflow-web-interface)).
   * </pre>
   *
   * <code>string airflow_uri = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for airflowUri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAirflowUriBytes() {
    java.lang.Object ref = airflowUri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      airflowUri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENCRYPTION_CONFIG_FIELD_NUMBER = 12;
  private com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryptionConfig_;
  /**
   * <pre>
   * Optional. The encryption options for the Cloud Composer environment and its
   * dependencies. Cannot be updated.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the encryptionConfig field is set.
   */
  @java.lang.Override
  public boolean hasEncryptionConfig() {
    return encryptionConfig_ != null;
  }
  /**
   * <pre>
   * Optional. The encryption options for the Cloud Composer environment and its
   * dependencies. Cannot be updated.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The encryptionConfig.
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig getEncryptionConfig() {
    return encryptionConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.getDefaultInstance() : encryptionConfig_;
  }
  /**
   * <pre>
   * Optional. The encryption options for the Cloud Composer environment and its
   * dependencies. Cannot be updated.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfigOrBuilder getEncryptionConfigOrBuilder() {
    return getEncryptionConfig();
  }

  public static final int MAINTENANCE_WINDOW_FIELD_NUMBER = 13;
  private com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenanceWindow_;
  /**
   * <pre>
   * Optional. The maintenance window is the period when Cloud Composer components may
   * undergo maintenance. It is defined so that maintenance is not executed
   * during peak hours or critical time periods.
   * The system will not be under maintenance for every occurrence of this
   * window, but when maintenance is planned, it will be scheduled
   * during the window.
   * The maintenance window period must encompass at least 12 hours per week.
   * This may be split into multiple chunks, each with a size of
   * at least 4 hours.
   * If this value is omitted, Cloud Composer components may be subject to
   * maintenance at any time.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the maintenanceWindow field is set.
   */
  @java.lang.Override
  public boolean hasMaintenanceWindow() {
    return maintenanceWindow_ != null;
  }
  /**
   * <pre>
   * Optional. The maintenance window is the period when Cloud Composer components may
   * undergo maintenance. It is defined so that maintenance is not executed
   * during peak hours or critical time periods.
   * The system will not be under maintenance for every occurrence of this
   * window, but when maintenance is planned, it will be scheduled
   * during the window.
   * The maintenance window period must encompass at least 12 hours per week.
   * This may be split into multiple chunks, each with a size of
   * at least 4 hours.
   * If this value is omitted, Cloud Composer components may be subject to
   * maintenance at any time.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The maintenanceWindow.
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow getMaintenanceWindow() {
    return maintenanceWindow_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.getDefaultInstance() : maintenanceWindow_;
  }
  /**
   * <pre>
   * Optional. The maintenance window is the period when Cloud Composer components may
   * undergo maintenance. It is defined so that maintenance is not executed
   * during peak hours or critical time periods.
   * The system will not be under maintenance for every occurrence of this
   * window, but when maintenance is planned, it will be scheduled
   * during the window.
   * The maintenance window period must encompass at least 12 hours per week.
   * This may be split into multiple chunks, each with a size of
   * at least 4 hours.
   * If this value is omitted, Cloud Composer components may be subject to
   * maintenance at any time.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindowOrBuilder getMaintenanceWindowOrBuilder() {
    return getMaintenanceWindow();
  }

  public static final int WORKLOADS_CONFIG_FIELD_NUMBER = 15;
  private com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloadsConfig_;
  /**
   * <pre>
   * Optional. The workloads configuration settings for the GKE cluster associated with
   * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
   * server and workers workloads.
   * This field is supported for Cloud Composer environments in versions
   * composer-2.*.*-airflow-*.*.* and newer.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the workloadsConfig field is set.
   */
  @java.lang.Override
  public boolean hasWorkloadsConfig() {
    return workloadsConfig_ != null;
  }
  /**
   * <pre>
   * Optional. The workloads configuration settings for the GKE cluster associated with
   * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
   * server and workers workloads.
   * This field is supported for Cloud Composer environments in versions
   * composer-2.*.*-airflow-*.*.* and newer.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The workloadsConfig.
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig getWorkloadsConfig() {
    return workloadsConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.getDefaultInstance() : workloadsConfig_;
  }
  /**
   * <pre>
   * Optional. The workloads configuration settings for the GKE cluster associated with
   * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
   * server and workers workloads.
   * This field is supported for Cloud Composer environments in versions
   * composer-2.*.*-airflow-*.*.* and newer.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfigOrBuilder getWorkloadsConfigOrBuilder() {
    return getWorkloadsConfig();
  }

  public static final int ENVIRONMENT_SIZE_FIELD_NUMBER = 16;
  private int environmentSize_;
  /**
   * <pre>
   * Optional. The size of the Cloud Composer environment.
   * This field is supported for Cloud Composer environments in versions
   * composer-2.*.*-airflow-*.*.* and newer.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize environment_size = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The enum numeric value on the wire for environmentSize.
   */
  @java.lang.Override public int getEnvironmentSizeValue() {
    return environmentSize_;
  }
  /**
   * <pre>
   * Optional. The size of the Cloud Composer environment.
   * This field is supported for Cloud Composer environments in versions
   * composer-2.*.*-airflow-*.*.* and newer.
   * </pre>
   *
   * <code>.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize environment_size = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The environmentSize.
   */
  @java.lang.Override public com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize getEnvironmentSize() {
    @SuppressWarnings("deprecation")
    com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize result = com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize.valueOf(environmentSize_);
    return result == null ? com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getGkeClusterBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, gkeCluster_);
    }
    if (!getDagGcsPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, dagGcsPrefix_);
    }
    if (nodeCount_ != 0) {
      output.writeInt32(3, nodeCount_);
    }
    if (softwareConfig_ != null) {
      output.writeMessage(4, getSoftwareConfig());
    }
    if (nodeConfig_ != null) {
      output.writeMessage(5, getNodeConfig());
    }
    if (!getAirflowUriBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, airflowUri_);
    }
    if (privateEnvironmentConfig_ != null) {
      output.writeMessage(7, getPrivateEnvironmentConfig());
    }
    if (webServerNetworkAccessControl_ != null) {
      output.writeMessage(9, getWebServerNetworkAccessControl());
    }
    if (databaseConfig_ != null) {
      output.writeMessage(10, getDatabaseConfig());
    }
    if (webServerConfig_ != null) {
      output.writeMessage(11, getWebServerConfig());
    }
    if (encryptionConfig_ != null) {
      output.writeMessage(12, getEncryptionConfig());
    }
    if (maintenanceWindow_ != null) {
      output.writeMessage(13, getMaintenanceWindow());
    }
    if (workloadsConfig_ != null) {
      output.writeMessage(15, getWorkloadsConfig());
    }
    if (environmentSize_ != com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize.ENVIRONMENT_SIZE_UNSPECIFIED.getNumber()) {
      output.writeEnum(16, environmentSize_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getGkeClusterBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, gkeCluster_);
    }
    if (!getDagGcsPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, dagGcsPrefix_);
    }
    if (nodeCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, nodeCount_);
    }
    if (softwareConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getSoftwareConfig());
    }
    if (nodeConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getNodeConfig());
    }
    if (!getAirflowUriBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, airflowUri_);
    }
    if (privateEnvironmentConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getPrivateEnvironmentConfig());
    }
    if (webServerNetworkAccessControl_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getWebServerNetworkAccessControl());
    }
    if (databaseConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getDatabaseConfig());
    }
    if (webServerConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getWebServerConfig());
    }
    if (encryptionConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getEncryptionConfig());
    }
    if (maintenanceWindow_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getMaintenanceWindow());
    }
    if (workloadsConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, getWorkloadsConfig());
    }
    if (environmentSize_ != com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize.ENVIRONMENT_SIZE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(16, environmentSize_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig other = (com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig) obj;

    if (!getGkeCluster()
        .equals(other.getGkeCluster())) return false;
    if (!getDagGcsPrefix()
        .equals(other.getDagGcsPrefix())) return false;
    if (getNodeCount()
        != other.getNodeCount()) return false;
    if (hasSoftwareConfig() != other.hasSoftwareConfig()) return false;
    if (hasSoftwareConfig()) {
      if (!getSoftwareConfig()
          .equals(other.getSoftwareConfig())) return false;
    }
    if (hasNodeConfig() != other.hasNodeConfig()) return false;
    if (hasNodeConfig()) {
      if (!getNodeConfig()
          .equals(other.getNodeConfig())) return false;
    }
    if (hasPrivateEnvironmentConfig() != other.hasPrivateEnvironmentConfig()) return false;
    if (hasPrivateEnvironmentConfig()) {
      if (!getPrivateEnvironmentConfig()
          .equals(other.getPrivateEnvironmentConfig())) return false;
    }
    if (hasWebServerNetworkAccessControl() != other.hasWebServerNetworkAccessControl()) return false;
    if (hasWebServerNetworkAccessControl()) {
      if (!getWebServerNetworkAccessControl()
          .equals(other.getWebServerNetworkAccessControl())) return false;
    }
    if (hasDatabaseConfig() != other.hasDatabaseConfig()) return false;
    if (hasDatabaseConfig()) {
      if (!getDatabaseConfig()
          .equals(other.getDatabaseConfig())) return false;
    }
    if (hasWebServerConfig() != other.hasWebServerConfig()) return false;
    if (hasWebServerConfig()) {
      if (!getWebServerConfig()
          .equals(other.getWebServerConfig())) return false;
    }
    if (!getAirflowUri()
        .equals(other.getAirflowUri())) return false;
    if (hasEncryptionConfig() != other.hasEncryptionConfig()) return false;
    if (hasEncryptionConfig()) {
      if (!getEncryptionConfig()
          .equals(other.getEncryptionConfig())) return false;
    }
    if (hasMaintenanceWindow() != other.hasMaintenanceWindow()) return false;
    if (hasMaintenanceWindow()) {
      if (!getMaintenanceWindow()
          .equals(other.getMaintenanceWindow())) return false;
    }
    if (hasWorkloadsConfig() != other.hasWorkloadsConfig()) return false;
    if (hasWorkloadsConfig()) {
      if (!getWorkloadsConfig()
          .equals(other.getWorkloadsConfig())) return false;
    }
    if (environmentSize_ != other.environmentSize_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + GKE_CLUSTER_FIELD_NUMBER;
    hash = (53 * hash) + getGkeCluster().hashCode();
    hash = (37 * hash) + DAG_GCS_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getDagGcsPrefix().hashCode();
    hash = (37 * hash) + NODE_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getNodeCount();
    if (hasSoftwareConfig()) {
      hash = (37 * hash) + SOFTWARE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getSoftwareConfig().hashCode();
    }
    if (hasNodeConfig()) {
      hash = (37 * hash) + NODE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getNodeConfig().hashCode();
    }
    if (hasPrivateEnvironmentConfig()) {
      hash = (37 * hash) + PRIVATE_ENVIRONMENT_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getPrivateEnvironmentConfig().hashCode();
    }
    if (hasWebServerNetworkAccessControl()) {
      hash = (37 * hash) + WEB_SERVER_NETWORK_ACCESS_CONTROL_FIELD_NUMBER;
      hash = (53 * hash) + getWebServerNetworkAccessControl().hashCode();
    }
    if (hasDatabaseConfig()) {
      hash = (37 * hash) + DATABASE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDatabaseConfig().hashCode();
    }
    if (hasWebServerConfig()) {
      hash = (37 * hash) + WEB_SERVER_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getWebServerConfig().hashCode();
    }
    hash = (37 * hash) + AIRFLOW_URI_FIELD_NUMBER;
    hash = (53 * hash) + getAirflowUri().hashCode();
    if (hasEncryptionConfig()) {
      hash = (37 * hash) + ENCRYPTION_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getEncryptionConfig().hashCode();
    }
    if (hasMaintenanceWindow()) {
      hash = (37 * hash) + MAINTENANCE_WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + getMaintenanceWindow().hashCode();
    }
    if (hasWorkloadsConfig()) {
      hash = (37 * hash) + WORKLOADS_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getWorkloadsConfig().hashCode();
    }
    hash = (37 * hash) + ENVIRONMENT_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + environmentSize_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configuration information for an environment.
   * </pre>
   *
   * Protobuf type {@code google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig)
      com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentsOuterClass.internal_static_google_cloud_orchestration_airflow_service_v1beta1_EnvironmentConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentsOuterClass.internal_static_google_cloud_orchestration_airflow_service_v1beta1_EnvironmentConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.class, com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.Builder.class);
    }

    // Construct using com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      gkeCluster_ = "";

      dagGcsPrefix_ = "";

      nodeCount_ = 0;

      if (softwareConfigBuilder_ == null) {
        softwareConfig_ = null;
      } else {
        softwareConfig_ = null;
        softwareConfigBuilder_ = null;
      }
      if (nodeConfigBuilder_ == null) {
        nodeConfig_ = null;
      } else {
        nodeConfig_ = null;
        nodeConfigBuilder_ = null;
      }
      if (privateEnvironmentConfigBuilder_ == null) {
        privateEnvironmentConfig_ = null;
      } else {
        privateEnvironmentConfig_ = null;
        privateEnvironmentConfigBuilder_ = null;
      }
      if (webServerNetworkAccessControlBuilder_ == null) {
        webServerNetworkAccessControl_ = null;
      } else {
        webServerNetworkAccessControl_ = null;
        webServerNetworkAccessControlBuilder_ = null;
      }
      if (databaseConfigBuilder_ == null) {
        databaseConfig_ = null;
      } else {
        databaseConfig_ = null;
        databaseConfigBuilder_ = null;
      }
      if (webServerConfigBuilder_ == null) {
        webServerConfig_ = null;
      } else {
        webServerConfig_ = null;
        webServerConfigBuilder_ = null;
      }
      airflowUri_ = "";

      if (encryptionConfigBuilder_ == null) {
        encryptionConfig_ = null;
      } else {
        encryptionConfig_ = null;
        encryptionConfigBuilder_ = null;
      }
      if (maintenanceWindowBuilder_ == null) {
        maintenanceWindow_ = null;
      } else {
        maintenanceWindow_ = null;
        maintenanceWindowBuilder_ = null;
      }
      if (workloadsConfigBuilder_ == null) {
        workloadsConfig_ = null;
      } else {
        workloadsConfig_ = null;
        workloadsConfigBuilder_ = null;
      }
      environmentSize_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentsOuterClass.internal_static_google_cloud_orchestration_airflow_service_v1beta1_EnvironmentConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig getDefaultInstanceForType() {
      return com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig build() {
      com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig buildPartial() {
      com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig result = new com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig(this);
      result.gkeCluster_ = gkeCluster_;
      result.dagGcsPrefix_ = dagGcsPrefix_;
      result.nodeCount_ = nodeCount_;
      if (softwareConfigBuilder_ == null) {
        result.softwareConfig_ = softwareConfig_;
      } else {
        result.softwareConfig_ = softwareConfigBuilder_.build();
      }
      if (nodeConfigBuilder_ == null) {
        result.nodeConfig_ = nodeConfig_;
      } else {
        result.nodeConfig_ = nodeConfigBuilder_.build();
      }
      if (privateEnvironmentConfigBuilder_ == null) {
        result.privateEnvironmentConfig_ = privateEnvironmentConfig_;
      } else {
        result.privateEnvironmentConfig_ = privateEnvironmentConfigBuilder_.build();
      }
      if (webServerNetworkAccessControlBuilder_ == null) {
        result.webServerNetworkAccessControl_ = webServerNetworkAccessControl_;
      } else {
        result.webServerNetworkAccessControl_ = webServerNetworkAccessControlBuilder_.build();
      }
      if (databaseConfigBuilder_ == null) {
        result.databaseConfig_ = databaseConfig_;
      } else {
        result.databaseConfig_ = databaseConfigBuilder_.build();
      }
      if (webServerConfigBuilder_ == null) {
        result.webServerConfig_ = webServerConfig_;
      } else {
        result.webServerConfig_ = webServerConfigBuilder_.build();
      }
      result.airflowUri_ = airflowUri_;
      if (encryptionConfigBuilder_ == null) {
        result.encryptionConfig_ = encryptionConfig_;
      } else {
        result.encryptionConfig_ = encryptionConfigBuilder_.build();
      }
      if (maintenanceWindowBuilder_ == null) {
        result.maintenanceWindow_ = maintenanceWindow_;
      } else {
        result.maintenanceWindow_ = maintenanceWindowBuilder_.build();
      }
      if (workloadsConfigBuilder_ == null) {
        result.workloadsConfig_ = workloadsConfig_;
      } else {
        result.workloadsConfig_ = workloadsConfigBuilder_.build();
      }
      result.environmentSize_ = environmentSize_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig) {
        return mergeFrom((com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig other) {
      if (other == com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.getDefaultInstance()) return this;
      if (!other.getGkeCluster().isEmpty()) {
        gkeCluster_ = other.gkeCluster_;
        onChanged();
      }
      if (!other.getDagGcsPrefix().isEmpty()) {
        dagGcsPrefix_ = other.dagGcsPrefix_;
        onChanged();
      }
      if (other.getNodeCount() != 0) {
        setNodeCount(other.getNodeCount());
      }
      if (other.hasSoftwareConfig()) {
        mergeSoftwareConfig(other.getSoftwareConfig());
      }
      if (other.hasNodeConfig()) {
        mergeNodeConfig(other.getNodeConfig());
      }
      if (other.hasPrivateEnvironmentConfig()) {
        mergePrivateEnvironmentConfig(other.getPrivateEnvironmentConfig());
      }
      if (other.hasWebServerNetworkAccessControl()) {
        mergeWebServerNetworkAccessControl(other.getWebServerNetworkAccessControl());
      }
      if (other.hasDatabaseConfig()) {
        mergeDatabaseConfig(other.getDatabaseConfig());
      }
      if (other.hasWebServerConfig()) {
        mergeWebServerConfig(other.getWebServerConfig());
      }
      if (!other.getAirflowUri().isEmpty()) {
        airflowUri_ = other.airflowUri_;
        onChanged();
      }
      if (other.hasEncryptionConfig()) {
        mergeEncryptionConfig(other.getEncryptionConfig());
      }
      if (other.hasMaintenanceWindow()) {
        mergeMaintenanceWindow(other.getMaintenanceWindow());
      }
      if (other.hasWorkloadsConfig()) {
        mergeWorkloadsConfig(other.getWorkloadsConfig());
      }
      if (other.environmentSize_ != 0) {
        setEnvironmentSizeValue(other.getEnvironmentSizeValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object gkeCluster_ = "";
    /**
     * <pre>
     * Output only. The Kubernetes Engine cluster used to run this environment.
     * </pre>
     *
     * <code>string gke_cluster = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The gkeCluster.
     */
    public java.lang.String getGkeCluster() {
      java.lang.Object ref = gkeCluster_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        gkeCluster_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Output only. The Kubernetes Engine cluster used to run this environment.
     * </pre>
     *
     * <code>string gke_cluster = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The bytes for gkeCluster.
     */
    public com.google.protobuf.ByteString
        getGkeClusterBytes() {
      java.lang.Object ref = gkeCluster_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gkeCluster_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Output only. The Kubernetes Engine cluster used to run this environment.
     * </pre>
     *
     * <code>string gke_cluster = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The gkeCluster to set.
     * @return This builder for chaining.
     */
    public Builder setGkeCluster(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      gkeCluster_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The Kubernetes Engine cluster used to run this environment.
     * </pre>
     *
     * <code>string gke_cluster = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearGkeCluster() {
      
      gkeCluster_ = getDefaultInstance().getGkeCluster();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The Kubernetes Engine cluster used to run this environment.
     * </pre>
     *
     * <code>string gke_cluster = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The bytes for gkeCluster to set.
     * @return This builder for chaining.
     */
    public Builder setGkeClusterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      gkeCluster_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object dagGcsPrefix_ = "";
    /**
     * <pre>
     * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud
     * Storage objects reside in a flat namespace, a hierarchical file tree
     * can be simulated using "/"-delimited object name prefixes. DAG objects for
     * this environment reside in a simulated directory with the given prefix.
     * </pre>
     *
     * <code>string dag_gcs_prefix = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The dagGcsPrefix.
     */
    public java.lang.String getDagGcsPrefix() {
      java.lang.Object ref = dagGcsPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dagGcsPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud
     * Storage objects reside in a flat namespace, a hierarchical file tree
     * can be simulated using "/"-delimited object name prefixes. DAG objects for
     * this environment reside in a simulated directory with the given prefix.
     * </pre>
     *
     * <code>string dag_gcs_prefix = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The bytes for dagGcsPrefix.
     */
    public com.google.protobuf.ByteString
        getDagGcsPrefixBytes() {
      java.lang.Object ref = dagGcsPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dagGcsPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud
     * Storage objects reside in a flat namespace, a hierarchical file tree
     * can be simulated using "/"-delimited object name prefixes. DAG objects for
     * this environment reside in a simulated directory with the given prefix.
     * </pre>
     *
     * <code>string dag_gcs_prefix = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The dagGcsPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setDagGcsPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dagGcsPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud
     * Storage objects reside in a flat namespace, a hierarchical file tree
     * can be simulated using "/"-delimited object name prefixes. DAG objects for
     * this environment reside in a simulated directory with the given prefix.
     * </pre>
     *
     * <code>string dag_gcs_prefix = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearDagGcsPrefix() {
      
      dagGcsPrefix_ = getDefaultInstance().getDagGcsPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud
     * Storage objects reside in a flat namespace, a hierarchical file tree
     * can be simulated using "/"-delimited object name prefixes. DAG objects for
     * this environment reside in a simulated directory with the given prefix.
     * </pre>
     *
     * <code>string dag_gcs_prefix = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The bytes for dagGcsPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setDagGcsPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dagGcsPrefix_ = value;
      onChanged();
      return this;
    }

    private int nodeCount_ ;
    /**
     * <pre>
     * The number of nodes in the Kubernetes Engine cluster that will be
     * used to run this environment.
     * </pre>
     *
     * <code>int32 node_count = 3;</code>
     * @return The nodeCount.
     */
    @java.lang.Override
    public int getNodeCount() {
      return nodeCount_;
    }
    /**
     * <pre>
     * The number of nodes in the Kubernetes Engine cluster that will be
     * used to run this environment.
     * </pre>
     *
     * <code>int32 node_count = 3;</code>
     * @param value The nodeCount to set.
     * @return This builder for chaining.
     */
    public Builder setNodeCount(int value) {
      
      nodeCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of nodes in the Kubernetes Engine cluster that will be
     * used to run this environment.
     * </pre>
     *
     * <code>int32 node_count = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearNodeCount() {
      
      nodeCount_ = 0;
      onChanged();
      return this;
    }

    private com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig softwareConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig, com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfigOrBuilder> softwareConfigBuilder_;
    /**
     * <pre>
     * The configuration settings for software inside the environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
     * @return Whether the softwareConfig field is set.
     */
    public boolean hasSoftwareConfig() {
      return softwareConfigBuilder_ != null || softwareConfig_ != null;
    }
    /**
     * <pre>
     * The configuration settings for software inside the environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
     * @return The softwareConfig.
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig getSoftwareConfig() {
      if (softwareConfigBuilder_ == null) {
        return softwareConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.getDefaultInstance() : softwareConfig_;
      } else {
        return softwareConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The configuration settings for software inside the environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
     */
    public Builder setSoftwareConfig(com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig value) {
      if (softwareConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        softwareConfig_ = value;
        onChanged();
      } else {
        softwareConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The configuration settings for software inside the environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
     */
    public Builder setSoftwareConfig(
        com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.Builder builderForValue) {
      if (softwareConfigBuilder_ == null) {
        softwareConfig_ = builderForValue.build();
        onChanged();
      } else {
        softwareConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The configuration settings for software inside the environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
     */
    public Builder mergeSoftwareConfig(com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig value) {
      if (softwareConfigBuilder_ == null) {
        if (softwareConfig_ != null) {
          softwareConfig_ =
            com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.newBuilder(softwareConfig_).mergeFrom(value).buildPartial();
        } else {
          softwareConfig_ = value;
        }
        onChanged();
      } else {
        softwareConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The configuration settings for software inside the environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
     */
    public Builder clearSoftwareConfig() {
      if (softwareConfigBuilder_ == null) {
        softwareConfig_ = null;
        onChanged();
      } else {
        softwareConfig_ = null;
        softwareConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The configuration settings for software inside the environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.Builder getSoftwareConfigBuilder() {
      
      onChanged();
      return getSoftwareConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The configuration settings for software inside the environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfigOrBuilder getSoftwareConfigOrBuilder() {
      if (softwareConfigBuilder_ != null) {
        return softwareConfigBuilder_.getMessageOrBuilder();
      } else {
        return softwareConfig_ == null ?
            com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.getDefaultInstance() : softwareConfig_;
      }
    }
    /**
     * <pre>
     * The configuration settings for software inside the environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig software_config = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig, com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfigOrBuilder> 
        getSoftwareConfigFieldBuilder() {
      if (softwareConfigBuilder_ == null) {
        softwareConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig, com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.SoftwareConfigOrBuilder>(
                getSoftwareConfig(),
                getParentForChildren(),
                isClean());
        softwareConfig_ = null;
      }
      return softwareConfigBuilder_;
    }

    private com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig nodeConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig, com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfigOrBuilder> nodeConfigBuilder_;
    /**
     * <pre>
     * The configuration used for the Kubernetes Engine cluster.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
     * @return Whether the nodeConfig field is set.
     */
    public boolean hasNodeConfig() {
      return nodeConfigBuilder_ != null || nodeConfig_ != null;
    }
    /**
     * <pre>
     * The configuration used for the Kubernetes Engine cluster.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
     * @return The nodeConfig.
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig getNodeConfig() {
      if (nodeConfigBuilder_ == null) {
        return nodeConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.getDefaultInstance() : nodeConfig_;
      } else {
        return nodeConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The configuration used for the Kubernetes Engine cluster.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
     */
    public Builder setNodeConfig(com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig value) {
      if (nodeConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nodeConfig_ = value;
        onChanged();
      } else {
        nodeConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The configuration used for the Kubernetes Engine cluster.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
     */
    public Builder setNodeConfig(
        com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.Builder builderForValue) {
      if (nodeConfigBuilder_ == null) {
        nodeConfig_ = builderForValue.build();
        onChanged();
      } else {
        nodeConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The configuration used for the Kubernetes Engine cluster.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
     */
    public Builder mergeNodeConfig(com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig value) {
      if (nodeConfigBuilder_ == null) {
        if (nodeConfig_ != null) {
          nodeConfig_ =
            com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.newBuilder(nodeConfig_).mergeFrom(value).buildPartial();
        } else {
          nodeConfig_ = value;
        }
        onChanged();
      } else {
        nodeConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The configuration used for the Kubernetes Engine cluster.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
     */
    public Builder clearNodeConfig() {
      if (nodeConfigBuilder_ == null) {
        nodeConfig_ = null;
        onChanged();
      } else {
        nodeConfig_ = null;
        nodeConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The configuration used for the Kubernetes Engine cluster.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.Builder getNodeConfigBuilder() {
      
      onChanged();
      return getNodeConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The configuration used for the Kubernetes Engine cluster.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfigOrBuilder getNodeConfigOrBuilder() {
      if (nodeConfigBuilder_ != null) {
        return nodeConfigBuilder_.getMessageOrBuilder();
      } else {
        return nodeConfig_ == null ?
            com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.getDefaultInstance() : nodeConfig_;
      }
    }
    /**
     * <pre>
     * The configuration used for the Kubernetes Engine cluster.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig node_config = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig, com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfigOrBuilder> 
        getNodeConfigFieldBuilder() {
      if (nodeConfigBuilder_ == null) {
        nodeConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig, com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.NodeConfigOrBuilder>(
                getNodeConfig(),
                getParentForChildren(),
                isClean());
        nodeConfig_ = null;
      }
      return nodeConfigBuilder_;
    }

    private com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig privateEnvironmentConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig, com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfigOrBuilder> privateEnvironmentConfigBuilder_;
    /**
     * <pre>
     * The configuration used for the Private IP Cloud Composer environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
     * @return Whether the privateEnvironmentConfig field is set.
     */
    public boolean hasPrivateEnvironmentConfig() {
      return privateEnvironmentConfigBuilder_ != null || privateEnvironmentConfig_ != null;
    }
    /**
     * <pre>
     * The configuration used for the Private IP Cloud Composer environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
     * @return The privateEnvironmentConfig.
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig getPrivateEnvironmentConfig() {
      if (privateEnvironmentConfigBuilder_ == null) {
        return privateEnvironmentConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.getDefaultInstance() : privateEnvironmentConfig_;
      } else {
        return privateEnvironmentConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The configuration used for the Private IP Cloud Composer environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
     */
    public Builder setPrivateEnvironmentConfig(com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig value) {
      if (privateEnvironmentConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        privateEnvironmentConfig_ = value;
        onChanged();
      } else {
        privateEnvironmentConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The configuration used for the Private IP Cloud Composer environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
     */
    public Builder setPrivateEnvironmentConfig(
        com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.Builder builderForValue) {
      if (privateEnvironmentConfigBuilder_ == null) {
        privateEnvironmentConfig_ = builderForValue.build();
        onChanged();
      } else {
        privateEnvironmentConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The configuration used for the Private IP Cloud Composer environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
     */
    public Builder mergePrivateEnvironmentConfig(com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig value) {
      if (privateEnvironmentConfigBuilder_ == null) {
        if (privateEnvironmentConfig_ != null) {
          privateEnvironmentConfig_ =
            com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.newBuilder(privateEnvironmentConfig_).mergeFrom(value).buildPartial();
        } else {
          privateEnvironmentConfig_ = value;
        }
        onChanged();
      } else {
        privateEnvironmentConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The configuration used for the Private IP Cloud Composer environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
     */
    public Builder clearPrivateEnvironmentConfig() {
      if (privateEnvironmentConfigBuilder_ == null) {
        privateEnvironmentConfig_ = null;
        onChanged();
      } else {
        privateEnvironmentConfig_ = null;
        privateEnvironmentConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The configuration used for the Private IP Cloud Composer environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.Builder getPrivateEnvironmentConfigBuilder() {
      
      onChanged();
      return getPrivateEnvironmentConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The configuration used for the Private IP Cloud Composer environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfigOrBuilder getPrivateEnvironmentConfigOrBuilder() {
      if (privateEnvironmentConfigBuilder_ != null) {
        return privateEnvironmentConfigBuilder_.getMessageOrBuilder();
      } else {
        return privateEnvironmentConfig_ == null ?
            com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.getDefaultInstance() : privateEnvironmentConfig_;
      }
    }
    /**
     * <pre>
     * The configuration used for the Private IP Cloud Composer environment.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig private_environment_config = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig, com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfigOrBuilder> 
        getPrivateEnvironmentConfigFieldBuilder() {
      if (privateEnvironmentConfigBuilder_ == null) {
        privateEnvironmentConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig, com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.PrivateEnvironmentConfigOrBuilder>(
                getPrivateEnvironmentConfig(),
                getParentForChildren(),
                isClean());
        privateEnvironmentConfig_ = null;
      }
      return privateEnvironmentConfigBuilder_;
    }

    private com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl webServerNetworkAccessControl_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControlOrBuilder> webServerNetworkAccessControlBuilder_;
    /**
     * <pre>
     * Optional. The network-level access control policy for the Airflow web server. If
     * unspecified, no network-level access restrictions will be applied.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the webServerNetworkAccessControl field is set.
     */
    public boolean hasWebServerNetworkAccessControl() {
      return webServerNetworkAccessControlBuilder_ != null || webServerNetworkAccessControl_ != null;
    }
    /**
     * <pre>
     * Optional. The network-level access control policy for the Airflow web server. If
     * unspecified, no network-level access restrictions will be applied.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The webServerNetworkAccessControl.
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl getWebServerNetworkAccessControl() {
      if (webServerNetworkAccessControlBuilder_ == null) {
        return webServerNetworkAccessControl_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.getDefaultInstance() : webServerNetworkAccessControl_;
      } else {
        return webServerNetworkAccessControlBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. The network-level access control policy for the Airflow web server. If
     * unspecified, no network-level access restrictions will be applied.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setWebServerNetworkAccessControl(com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl value) {
      if (webServerNetworkAccessControlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        webServerNetworkAccessControl_ = value;
        onChanged();
      } else {
        webServerNetworkAccessControlBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The network-level access control policy for the Airflow web server. If
     * unspecified, no network-level access restrictions will be applied.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setWebServerNetworkAccessControl(
        com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.Builder builderForValue) {
      if (webServerNetworkAccessControlBuilder_ == null) {
        webServerNetworkAccessControl_ = builderForValue.build();
        onChanged();
      } else {
        webServerNetworkAccessControlBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The network-level access control policy for the Airflow web server. If
     * unspecified, no network-level access restrictions will be applied.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder mergeWebServerNetworkAccessControl(com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl value) {
      if (webServerNetworkAccessControlBuilder_ == null) {
        if (webServerNetworkAccessControl_ != null) {
          webServerNetworkAccessControl_ =
            com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.newBuilder(webServerNetworkAccessControl_).mergeFrom(value).buildPartial();
        } else {
          webServerNetworkAccessControl_ = value;
        }
        onChanged();
      } else {
        webServerNetworkAccessControlBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The network-level access control policy for the Airflow web server. If
     * unspecified, no network-level access restrictions will be applied.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder clearWebServerNetworkAccessControl() {
      if (webServerNetworkAccessControlBuilder_ == null) {
        webServerNetworkAccessControl_ = null;
        onChanged();
      } else {
        webServerNetworkAccessControl_ = null;
        webServerNetworkAccessControlBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The network-level access control policy for the Airflow web server. If
     * unspecified, no network-level access restrictions will be applied.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.Builder getWebServerNetworkAccessControlBuilder() {
      
      onChanged();
      return getWebServerNetworkAccessControlFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. The network-level access control policy for the Airflow web server. If
     * unspecified, no network-level access restrictions will be applied.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControlOrBuilder getWebServerNetworkAccessControlOrBuilder() {
      if (webServerNetworkAccessControlBuilder_ != null) {
        return webServerNetworkAccessControlBuilder_.getMessageOrBuilder();
      } else {
        return webServerNetworkAccessControl_ == null ?
            com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.getDefaultInstance() : webServerNetworkAccessControl_;
      }
    }
    /**
     * <pre>
     * Optional. The network-level access control policy for the Airflow web server. If
     * unspecified, no network-level access restrictions will be applied.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl web_server_network_access_control = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControlOrBuilder> 
        getWebServerNetworkAccessControlFieldBuilder() {
      if (webServerNetworkAccessControlBuilder_ == null) {
        webServerNetworkAccessControlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControl.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerNetworkAccessControlOrBuilder>(
                getWebServerNetworkAccessControl(),
                getParentForChildren(),
                isClean());
        webServerNetworkAccessControl_ = null;
      }
      return webServerNetworkAccessControlBuilder_;
    }

    private com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig databaseConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig, com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfigOrBuilder> databaseConfigBuilder_;
    /**
     * <pre>
     * Optional. The configuration settings for Cloud SQL instance used internally by Apache
     * Airflow software.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the databaseConfig field is set.
     */
    public boolean hasDatabaseConfig() {
      return databaseConfigBuilder_ != null || databaseConfig_ != null;
    }
    /**
     * <pre>
     * Optional. The configuration settings for Cloud SQL instance used internally by Apache
     * Airflow software.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The databaseConfig.
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig getDatabaseConfig() {
      if (databaseConfigBuilder_ == null) {
        return databaseConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.getDefaultInstance() : databaseConfig_;
      } else {
        return databaseConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. The configuration settings for Cloud SQL instance used internally by Apache
     * Airflow software.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setDatabaseConfig(com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig value) {
      if (databaseConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        databaseConfig_ = value;
        onChanged();
      } else {
        databaseConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The configuration settings for Cloud SQL instance used internally by Apache
     * Airflow software.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setDatabaseConfig(
        com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.Builder builderForValue) {
      if (databaseConfigBuilder_ == null) {
        databaseConfig_ = builderForValue.build();
        onChanged();
      } else {
        databaseConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The configuration settings for Cloud SQL instance used internally by Apache
     * Airflow software.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder mergeDatabaseConfig(com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig value) {
      if (databaseConfigBuilder_ == null) {
        if (databaseConfig_ != null) {
          databaseConfig_ =
            com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.newBuilder(databaseConfig_).mergeFrom(value).buildPartial();
        } else {
          databaseConfig_ = value;
        }
        onChanged();
      } else {
        databaseConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The configuration settings for Cloud SQL instance used internally by Apache
     * Airflow software.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder clearDatabaseConfig() {
      if (databaseConfigBuilder_ == null) {
        databaseConfig_ = null;
        onChanged();
      } else {
        databaseConfig_ = null;
        databaseConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The configuration settings for Cloud SQL instance used internally by Apache
     * Airflow software.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.Builder getDatabaseConfigBuilder() {
      
      onChanged();
      return getDatabaseConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. The configuration settings for Cloud SQL instance used internally by Apache
     * Airflow software.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfigOrBuilder getDatabaseConfigOrBuilder() {
      if (databaseConfigBuilder_ != null) {
        return databaseConfigBuilder_.getMessageOrBuilder();
      } else {
        return databaseConfig_ == null ?
            com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.getDefaultInstance() : databaseConfig_;
      }
    }
    /**
     * <pre>
     * Optional. The configuration settings for Cloud SQL instance used internally by Apache
     * Airflow software.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig database_config = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig, com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfigOrBuilder> 
        getDatabaseConfigFieldBuilder() {
      if (databaseConfigBuilder_ == null) {
        databaseConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig, com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.DatabaseConfigOrBuilder>(
                getDatabaseConfig(),
                getParentForChildren(),
                isClean());
        databaseConfig_ = null;
      }
      return databaseConfigBuilder_;
    }

    private com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig webServerConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfigOrBuilder> webServerConfigBuilder_;
    /**
     * <pre>
     * Optional. The configuration settings for the Airflow web server App Engine instance.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the webServerConfig field is set.
     */
    public boolean hasWebServerConfig() {
      return webServerConfigBuilder_ != null || webServerConfig_ != null;
    }
    /**
     * <pre>
     * Optional. The configuration settings for the Airflow web server App Engine instance.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The webServerConfig.
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig getWebServerConfig() {
      if (webServerConfigBuilder_ == null) {
        return webServerConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.getDefaultInstance() : webServerConfig_;
      } else {
        return webServerConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. The configuration settings for the Airflow web server App Engine instance.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setWebServerConfig(com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig value) {
      if (webServerConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        webServerConfig_ = value;
        onChanged();
      } else {
        webServerConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The configuration settings for the Airflow web server App Engine instance.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setWebServerConfig(
        com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.Builder builderForValue) {
      if (webServerConfigBuilder_ == null) {
        webServerConfig_ = builderForValue.build();
        onChanged();
      } else {
        webServerConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The configuration settings for the Airflow web server App Engine instance.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder mergeWebServerConfig(com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig value) {
      if (webServerConfigBuilder_ == null) {
        if (webServerConfig_ != null) {
          webServerConfig_ =
            com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.newBuilder(webServerConfig_).mergeFrom(value).buildPartial();
        } else {
          webServerConfig_ = value;
        }
        onChanged();
      } else {
        webServerConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The configuration settings for the Airflow web server App Engine instance.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder clearWebServerConfig() {
      if (webServerConfigBuilder_ == null) {
        webServerConfig_ = null;
        onChanged();
      } else {
        webServerConfig_ = null;
        webServerConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The configuration settings for the Airflow web server App Engine instance.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.Builder getWebServerConfigBuilder() {
      
      onChanged();
      return getWebServerConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. The configuration settings for the Airflow web server App Engine instance.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfigOrBuilder getWebServerConfigOrBuilder() {
      if (webServerConfigBuilder_ != null) {
        return webServerConfigBuilder_.getMessageOrBuilder();
      } else {
        return webServerConfig_ == null ?
            com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.getDefaultInstance() : webServerConfig_;
      }
    }
    /**
     * <pre>
     * Optional. The configuration settings for the Airflow web server App Engine instance.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig web_server_config = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfigOrBuilder> 
        getWebServerConfigFieldBuilder() {
      if (webServerConfigBuilder_ == null) {
        webServerConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.WebServerConfigOrBuilder>(
                getWebServerConfig(),
                getParentForChildren(),
                isClean());
        webServerConfig_ = null;
      }
      return webServerConfigBuilder_;
    }

    private java.lang.Object airflowUri_ = "";
    /**
     * <pre>
     * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see
     * [Airflow web
     * interface](/composer/docs/how-to/accessing/airflow-web-interface)).
     * </pre>
     *
     * <code>string airflow_uri = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The airflowUri.
     */
    public java.lang.String getAirflowUri() {
      java.lang.Object ref = airflowUri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        airflowUri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see
     * [Airflow web
     * interface](/composer/docs/how-to/accessing/airflow-web-interface)).
     * </pre>
     *
     * <code>string airflow_uri = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The bytes for airflowUri.
     */
    public com.google.protobuf.ByteString
        getAirflowUriBytes() {
      java.lang.Object ref = airflowUri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        airflowUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see
     * [Airflow web
     * interface](/composer/docs/how-to/accessing/airflow-web-interface)).
     * </pre>
     *
     * <code>string airflow_uri = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The airflowUri to set.
     * @return This builder for chaining.
     */
    public Builder setAirflowUri(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      airflowUri_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see
     * [Airflow web
     * interface](/composer/docs/how-to/accessing/airflow-web-interface)).
     * </pre>
     *
     * <code>string airflow_uri = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearAirflowUri() {
      
      airflowUri_ = getDefaultInstance().getAirflowUri();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see
     * [Airflow web
     * interface](/composer/docs/how-to/accessing/airflow-web-interface)).
     * </pre>
     *
     * <code>string airflow_uri = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The bytes for airflowUri to set.
     * @return This builder for chaining.
     */
    public Builder setAirflowUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      airflowUri_ = value;
      onChanged();
      return this;
    }

    private com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryptionConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig, com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfigOrBuilder> encryptionConfigBuilder_;
    /**
     * <pre>
     * Optional. The encryption options for the Cloud Composer environment and its
     * dependencies. Cannot be updated.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the encryptionConfig field is set.
     */
    public boolean hasEncryptionConfig() {
      return encryptionConfigBuilder_ != null || encryptionConfig_ != null;
    }
    /**
     * <pre>
     * Optional. The encryption options for the Cloud Composer environment and its
     * dependencies. Cannot be updated.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The encryptionConfig.
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig getEncryptionConfig() {
      if (encryptionConfigBuilder_ == null) {
        return encryptionConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.getDefaultInstance() : encryptionConfig_;
      } else {
        return encryptionConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. The encryption options for the Cloud Composer environment and its
     * dependencies. Cannot be updated.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setEncryptionConfig(com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig value) {
      if (encryptionConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        encryptionConfig_ = value;
        onChanged();
      } else {
        encryptionConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The encryption options for the Cloud Composer environment and its
     * dependencies. Cannot be updated.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setEncryptionConfig(
        com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.Builder builderForValue) {
      if (encryptionConfigBuilder_ == null) {
        encryptionConfig_ = builderForValue.build();
        onChanged();
      } else {
        encryptionConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The encryption options for the Cloud Composer environment and its
     * dependencies. Cannot be updated.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder mergeEncryptionConfig(com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig value) {
      if (encryptionConfigBuilder_ == null) {
        if (encryptionConfig_ != null) {
          encryptionConfig_ =
            com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.newBuilder(encryptionConfig_).mergeFrom(value).buildPartial();
        } else {
          encryptionConfig_ = value;
        }
        onChanged();
      } else {
        encryptionConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The encryption options for the Cloud Composer environment and its
     * dependencies. Cannot be updated.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder clearEncryptionConfig() {
      if (encryptionConfigBuilder_ == null) {
        encryptionConfig_ = null;
        onChanged();
      } else {
        encryptionConfig_ = null;
        encryptionConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The encryption options for the Cloud Composer environment and its
     * dependencies. Cannot be updated.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.Builder getEncryptionConfigBuilder() {
      
      onChanged();
      return getEncryptionConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. The encryption options for the Cloud Composer environment and its
     * dependencies. Cannot be updated.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfigOrBuilder getEncryptionConfigOrBuilder() {
      if (encryptionConfigBuilder_ != null) {
        return encryptionConfigBuilder_.getMessageOrBuilder();
      } else {
        return encryptionConfig_ == null ?
            com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.getDefaultInstance() : encryptionConfig_;
      }
    }
    /**
     * <pre>
     * Optional. The encryption options for the Cloud Composer environment and its
     * dependencies. Cannot be updated.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig encryption_config = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig, com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfigOrBuilder> 
        getEncryptionConfigFieldBuilder() {
      if (encryptionConfigBuilder_ == null) {
        encryptionConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig, com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.EncryptionConfigOrBuilder>(
                getEncryptionConfig(),
                getParentForChildren(),
                isClean());
        encryptionConfig_ = null;
      }
      return encryptionConfigBuilder_;
    }

    private com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenanceWindow_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow, com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindowOrBuilder> maintenanceWindowBuilder_;
    /**
     * <pre>
     * Optional. The maintenance window is the period when Cloud Composer components may
     * undergo maintenance. It is defined so that maintenance is not executed
     * during peak hours or critical time periods.
     * The system will not be under maintenance for every occurrence of this
     * window, but when maintenance is planned, it will be scheduled
     * during the window.
     * The maintenance window period must encompass at least 12 hours per week.
     * This may be split into multiple chunks, each with a size of
     * at least 4 hours.
     * If this value is omitted, Cloud Composer components may be subject to
     * maintenance at any time.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the maintenanceWindow field is set.
     */
    public boolean hasMaintenanceWindow() {
      return maintenanceWindowBuilder_ != null || maintenanceWindow_ != null;
    }
    /**
     * <pre>
     * Optional. The maintenance window is the period when Cloud Composer components may
     * undergo maintenance. It is defined so that maintenance is not executed
     * during peak hours or critical time periods.
     * The system will not be under maintenance for every occurrence of this
     * window, but when maintenance is planned, it will be scheduled
     * during the window.
     * The maintenance window period must encompass at least 12 hours per week.
     * This may be split into multiple chunks, each with a size of
     * at least 4 hours.
     * If this value is omitted, Cloud Composer components may be subject to
     * maintenance at any time.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The maintenanceWindow.
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow getMaintenanceWindow() {
      if (maintenanceWindowBuilder_ == null) {
        return maintenanceWindow_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.getDefaultInstance() : maintenanceWindow_;
      } else {
        return maintenanceWindowBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. The maintenance window is the period when Cloud Composer components may
     * undergo maintenance. It is defined so that maintenance is not executed
     * during peak hours or critical time periods.
     * The system will not be under maintenance for every occurrence of this
     * window, but when maintenance is planned, it will be scheduled
     * during the window.
     * The maintenance window period must encompass at least 12 hours per week.
     * This may be split into multiple chunks, each with a size of
     * at least 4 hours.
     * If this value is omitted, Cloud Composer components may be subject to
     * maintenance at any time.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setMaintenanceWindow(com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow value) {
      if (maintenanceWindowBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maintenanceWindow_ = value;
        onChanged();
      } else {
        maintenanceWindowBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The maintenance window is the period when Cloud Composer components may
     * undergo maintenance. It is defined so that maintenance is not executed
     * during peak hours or critical time periods.
     * The system will not be under maintenance for every occurrence of this
     * window, but when maintenance is planned, it will be scheduled
     * during the window.
     * The maintenance window period must encompass at least 12 hours per week.
     * This may be split into multiple chunks, each with a size of
     * at least 4 hours.
     * If this value is omitted, Cloud Composer components may be subject to
     * maintenance at any time.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setMaintenanceWindow(
        com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.Builder builderForValue) {
      if (maintenanceWindowBuilder_ == null) {
        maintenanceWindow_ = builderForValue.build();
        onChanged();
      } else {
        maintenanceWindowBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The maintenance window is the period when Cloud Composer components may
     * undergo maintenance. It is defined so that maintenance is not executed
     * during peak hours or critical time periods.
     * The system will not be under maintenance for every occurrence of this
     * window, but when maintenance is planned, it will be scheduled
     * during the window.
     * The maintenance window period must encompass at least 12 hours per week.
     * This may be split into multiple chunks, each with a size of
     * at least 4 hours.
     * If this value is omitted, Cloud Composer components may be subject to
     * maintenance at any time.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder mergeMaintenanceWindow(com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow value) {
      if (maintenanceWindowBuilder_ == null) {
        if (maintenanceWindow_ != null) {
          maintenanceWindow_ =
            com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.newBuilder(maintenanceWindow_).mergeFrom(value).buildPartial();
        } else {
          maintenanceWindow_ = value;
        }
        onChanged();
      } else {
        maintenanceWindowBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The maintenance window is the period when Cloud Composer components may
     * undergo maintenance. It is defined so that maintenance is not executed
     * during peak hours or critical time periods.
     * The system will not be under maintenance for every occurrence of this
     * window, but when maintenance is planned, it will be scheduled
     * during the window.
     * The maintenance window period must encompass at least 12 hours per week.
     * This may be split into multiple chunks, each with a size of
     * at least 4 hours.
     * If this value is omitted, Cloud Composer components may be subject to
     * maintenance at any time.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder clearMaintenanceWindow() {
      if (maintenanceWindowBuilder_ == null) {
        maintenanceWindow_ = null;
        onChanged();
      } else {
        maintenanceWindow_ = null;
        maintenanceWindowBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The maintenance window is the period when Cloud Composer components may
     * undergo maintenance. It is defined so that maintenance is not executed
     * during peak hours or critical time periods.
     * The system will not be under maintenance for every occurrence of this
     * window, but when maintenance is planned, it will be scheduled
     * during the window.
     * The maintenance window period must encompass at least 12 hours per week.
     * This may be split into multiple chunks, each with a size of
     * at least 4 hours.
     * If this value is omitted, Cloud Composer components may be subject to
     * maintenance at any time.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.Builder getMaintenanceWindowBuilder() {
      
      onChanged();
      return getMaintenanceWindowFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. The maintenance window is the period when Cloud Composer components may
     * undergo maintenance. It is defined so that maintenance is not executed
     * during peak hours or critical time periods.
     * The system will not be under maintenance for every occurrence of this
     * window, but when maintenance is planned, it will be scheduled
     * during the window.
     * The maintenance window period must encompass at least 12 hours per week.
     * This may be split into multiple chunks, each with a size of
     * at least 4 hours.
     * If this value is omitted, Cloud Composer components may be subject to
     * maintenance at any time.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindowOrBuilder getMaintenanceWindowOrBuilder() {
      if (maintenanceWindowBuilder_ != null) {
        return maintenanceWindowBuilder_.getMessageOrBuilder();
      } else {
        return maintenanceWindow_ == null ?
            com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.getDefaultInstance() : maintenanceWindow_;
      }
    }
    /**
     * <pre>
     * Optional. The maintenance window is the period when Cloud Composer components may
     * undergo maintenance. It is defined so that maintenance is not executed
     * during peak hours or critical time periods.
     * The system will not be under maintenance for every occurrence of this
     * window, but when maintenance is planned, it will be scheduled
     * during the window.
     * The maintenance window period must encompass at least 12 hours per week.
     * This may be split into multiple chunks, each with a size of
     * at least 4 hours.
     * If this value is omitted, Cloud Composer components may be subject to
     * maintenance at any time.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow maintenance_window = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow, com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindowOrBuilder> 
        getMaintenanceWindowFieldBuilder() {
      if (maintenanceWindowBuilder_ == null) {
        maintenanceWindowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow, com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindow.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.MaintenanceWindowOrBuilder>(
                getMaintenanceWindow(),
                getParentForChildren(),
                isClean());
        maintenanceWindow_ = null;
      }
      return maintenanceWindowBuilder_;
    }

    private com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloadsConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig, com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfigOrBuilder> workloadsConfigBuilder_;
    /**
     * <pre>
     * Optional. The workloads configuration settings for the GKE cluster associated with
     * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
     * server and workers workloads.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the workloadsConfig field is set.
     */
    public boolean hasWorkloadsConfig() {
      return workloadsConfigBuilder_ != null || workloadsConfig_ != null;
    }
    /**
     * <pre>
     * Optional. The workloads configuration settings for the GKE cluster associated with
     * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
     * server and workers workloads.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The workloadsConfig.
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig getWorkloadsConfig() {
      if (workloadsConfigBuilder_ == null) {
        return workloadsConfig_ == null ? com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.getDefaultInstance() : workloadsConfig_;
      } else {
        return workloadsConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. The workloads configuration settings for the GKE cluster associated with
     * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
     * server and workers workloads.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setWorkloadsConfig(com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig value) {
      if (workloadsConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        workloadsConfig_ = value;
        onChanged();
      } else {
        workloadsConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The workloads configuration settings for the GKE cluster associated with
     * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
     * server and workers workloads.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setWorkloadsConfig(
        com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.Builder builderForValue) {
      if (workloadsConfigBuilder_ == null) {
        workloadsConfig_ = builderForValue.build();
        onChanged();
      } else {
        workloadsConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The workloads configuration settings for the GKE cluster associated with
     * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
     * server and workers workloads.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder mergeWorkloadsConfig(com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig value) {
      if (workloadsConfigBuilder_ == null) {
        if (workloadsConfig_ != null) {
          workloadsConfig_ =
            com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.newBuilder(workloadsConfig_).mergeFrom(value).buildPartial();
        } else {
          workloadsConfig_ = value;
        }
        onChanged();
      } else {
        workloadsConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The workloads configuration settings for the GKE cluster associated with
     * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
     * server and workers workloads.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder clearWorkloadsConfig() {
      if (workloadsConfigBuilder_ == null) {
        workloadsConfig_ = null;
        onChanged();
      } else {
        workloadsConfig_ = null;
        workloadsConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The workloads configuration settings for the GKE cluster associated with
     * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
     * server and workers workloads.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.Builder getWorkloadsConfigBuilder() {
      
      onChanged();
      return getWorkloadsConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. The workloads configuration settings for the GKE cluster associated with
     * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
     * server and workers workloads.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfigOrBuilder getWorkloadsConfigOrBuilder() {
      if (workloadsConfigBuilder_ != null) {
        return workloadsConfigBuilder_.getMessageOrBuilder();
      } else {
        return workloadsConfig_ == null ?
            com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.getDefaultInstance() : workloadsConfig_;
      }
    }
    /**
     * <pre>
     * Optional. The workloads configuration settings for the GKE cluster associated with
     * the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web
     * server and workers workloads.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig workloads_config = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig, com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfigOrBuilder> 
        getWorkloadsConfigFieldBuilder() {
      if (workloadsConfigBuilder_ == null) {
        workloadsConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig, com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfig.Builder, com.google.cloud.orchestration.airflow.service.v1beta1.WorkloadsConfigOrBuilder>(
                getWorkloadsConfig(),
                getParentForChildren(),
                isClean());
        workloadsConfig_ = null;
      }
      return workloadsConfigBuilder_;
    }

    private int environmentSize_ = 0;
    /**
     * <pre>
     * Optional. The size of the Cloud Composer environment.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize environment_size = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The enum numeric value on the wire for environmentSize.
     */
    @java.lang.Override public int getEnvironmentSizeValue() {
      return environmentSize_;
    }
    /**
     * <pre>
     * Optional. The size of the Cloud Composer environment.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize environment_size = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param value The enum numeric value on the wire for environmentSize to set.
     * @return This builder for chaining.
     */
    public Builder setEnvironmentSizeValue(int value) {
      
      environmentSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The size of the Cloud Composer environment.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize environment_size = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The environmentSize.
     */
    @java.lang.Override
    public com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize getEnvironmentSize() {
      @SuppressWarnings("deprecation")
      com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize result = com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize.valueOf(environmentSize_);
      return result == null ? com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional. The size of the Cloud Composer environment.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize environment_size = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param value The environmentSize to set.
     * @return This builder for chaining.
     */
    public Builder setEnvironmentSize(com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      environmentSize_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The size of the Cloud Composer environment.
     * This field is supported for Cloud Composer environments in versions
     * composer-2.*.*-airflow-*.*.* and newer.
     * </pre>
     *
     * <code>.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig.EnvironmentSize environment_size = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return This builder for chaining.
     */
    public Builder clearEnvironmentSize() {
      
      environmentSize_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig)
  private static final com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig();
  }

  public static com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EnvironmentConfig>
      PARSER = new com.google.protobuf.AbstractParser<EnvironmentConfig>() {
    @java.lang.Override
    public EnvironmentConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EnvironmentConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EnvironmentConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EnvironmentConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.orchestration.airflow.service.v1beta1.EnvironmentConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

